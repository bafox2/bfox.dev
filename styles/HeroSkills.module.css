.heroSection {
  /* this is a component that will take up 100vh and announce information */
  margin: 0 auto;
  height: 100vh;
  background: #000;
  color: #fff;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  font-size: 1rem;
  font-weight: 700;
  font-variant: small-caps;
  letter-spacing: 0.2rem;
  position: relative;
  overflow: hidden;
  z-index: -1;
}

.tools__container {
  position: relative;
  width: 100vw;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
  grid-gap: 1rem;
  padding: 1rem;
  margin: 1rem;
}

.darkGreen {
  background-color: var(--darkGreen);
}

.orange {
  background-color: var(--orange);
}

.red {
  background-color: var(--red);
}

.blue {
  background-color: var(--blue);
}

.purple {
  background-color: var(--purple);
  color: var(--black);
}

.sand {
  background-color: var(--sand);
}

.skillDiv {
  max-width: 500px;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-start;
  gap: 2rem;
  background-color: var(--yellow);
  color: var(--gray);
  padding: 1rem;
  margin: var(--margin);
  box-shadow: var(--shadow);
  transition: var(--transition);
  z-index: 99;

  --color: var(--darkGreen); /* the color */
  --borderLength: 0.15em; /* border length*/
  --depth: 15px; /* the cube depth */

  --_s: calc(var(--depth) + var(--borderLength));
  border: solid #0000;
  border-width: var(--borderLength) var(--borderLength) var(--_s) var(--_s);
  background: conic-gradient(
        at left var(--depth) bottom var(--depth),
        #0000 90deg,
        rgb(255 255 255 /0.3) 0 225deg,
        rgb(255 255 255 /0.6) 0
      )
      border-box,
    conic-gradient(
        at left var(--_s) bottom var(--_s),
        #0000 90deg,
        var(--color) 0
      )
      0 100% / calc(100% - var(--borderLength)) calc(100% - var(--borderLength))
      border-box;
  transform: translate(calc(var(--depth) / -1), var(--depth));
  clip-path: polygon(
    var(--depth) 0%,
    var(--depth) 0%,
    100% 0%,
    100% calc(100% - var(--depth)),
    100% calc(100% - var(--depth)),
    var(--depth) calc(100% - var(--depth))
  );
  transition: 0.5s;

  /* make it responsive */
  @media (max-width: 768px) {
    max-width: 250px;
  }
}

.skillHeader::after {
  content: "___";
  color: var(--darkGreen);
  align-self: flex-start;
  display: block;
  flex: 1;
  letter-spacing: -0.2rem;
}

.skillDiv:hover {
  background-color: var(--secondark-light);
  color: var(--primary-dark);
  box-shadow: var(--shadow-transform);
  z-index: 99;

  transform: translate(0, 0);
  clip-path: polygon(
    0% var(--depth),
    var(--depth) 0%,
    100% 0%,
    100% calc(100% - var(--depth)),
    calc(100% - var(--depth)) 100%,
    0% 100%
  );
}

.skillTitle {
  color: var(--darkGreen);
  justify-self: center;
  align-self: flex-start;
  max-width: 85%;
}

.skillHeader {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  gap: 1rem;
}

.skillBody {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
}
